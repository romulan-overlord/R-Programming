setwd("D:/Study/MSC/sem2/Regression Methods")
# Define your matrix A
A = matrix(c(4, 1, 1, 4), nrow=2, ncol=2)
# Compute the eigenvalues and eigenvectors
eig = eigen(A)
# Take the square root of the eigenvalues
sqrt_eigvals = sqrt(eig$values)
View(eig)
# Construct the diagonal matrix D
D <- diag(sqrt_eigvals)
# Compute the square root of A
sqrt_A <- eig$vectors %*% D %*% solve(eig$vectors)
print("Square root of A:")
print(sqrt_A)
# Define your matrix A
A = matrix(c(2, 0, 0, 0, 2, 0, 0, 0, 3), nrow=3, ncol=3)
# Compute the eigenvalues and eigenvectors
eig = eigen(A)
View(eig)
# Take the square root of the eigenvalues
sqrt_eigvals = sqrt(eig$values)
# Construct the diagonal matrix D
D <- diag(sqrt_eigvals)
# Compute the square root of A
sqrt_A <- eig$vectors %*% D %*% solve(eig$vectors)
print("Square root of A:")
print(sqrt_A)
readline(prompt = "likh")
txt = readline(prompt = "likh")
txt = readline(prompt = "likh")
txt = readline(prompt = "likh")
n = 3
mat_in = c(2, 0, 0, 0, 2, 0, 0, 0, 3)
n = 3
mat_in = c(2, 0, 0, 0, 2, 0, 0, 0, 3)
M = matrix(mat_in, nrow=n, ncol=n)
eigen_data = eigen(M)
sqrt_eigvals = sqrt(eigen_data$values)
lambda = diag(sqrt_eigvals)
sqrt_M = eigen_data$vectors %*% lambda %*% solve(eigen_data$vectors)
print("Square root of M:")
print(sqrt_M)
# setting dimension of matrix
n = 3
# setting matrix input
mat_in = c(2, 0, 0, 0, 2, 0, 0, 0, 3)
# defining matrix
M = matrix(mat_in, nrow=n, ncol=n)
# getting eigen values and eigen vectors
eigen_data = eigen(M)
# getting squareroot of eigen values for lambda^-1
sqrt_eigvals = sqrt(eigen_data$values)
# constructing lambda (diagonal matrix)
lambda = diag(sqrt_eigvals)
# calculating squareroot matrix
sqrt_M = eigen_data$vectors %*% lambda %*% solve(eigen_data$vectors)
print("Square root of M:")
print(sqrt_M)
View(eigen_data)
View(eigen_data)
print(eigen_data$vectors)
# setting dimension of matrix
n = 3
# setting matrix input
mat_in = c(1,0,sqrt(2), 0,2,0,sqrt(2),0,0)
# defining matrix
M = matrix(mat_in, nrow=n, ncol=n)
# getting eigen values and eigen vectors
eigen_data = eigen(M)
View(eigen_data)
# getting squareroot of eigen values for lambda^-1
sqrt_eigvals = sqrt(eigen_data$values)
# constructing lambda (diagonal matrix)
lambda = diag(sqrt_eigvals)
# calculating squareroot matrix
sqrt_M = eigen_data$vectors %*% lambda %*% solve(eigen_data$vectors)
print("Square root of M:")
print(sqrt_M)
print(sqrt_eigvals)
# setting dimension of matrix
n = 3
# setting matrix input
mat_in = c(2, 0, 0, 0, 2, 0, 0, 0, 3)
# defining matrix
M = matrix(mat_in, nrow=n, ncol=n)
# getting eigen values and eigen vectors
eigen_data = eigen(M)
# getting squareroot of eigen values for lambda^-1
sqrt_eigvals = sqrt(eigen_data$values)
# constructing lambda (diagonal matrix)
lambda = diag(sqrt_eigvals)
# calculating squareroot matrix
sqrt_M = eigen_data$vectors %*% lambda %*% solve(eigen_data$vectors)
print("Square root of M:")
print(sqrt_M)
