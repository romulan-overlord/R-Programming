setwd("D:/Study/MSC/sem2/Regression Methods")
library('caTools')
library('ggplot2')
df = read.csv('./heart.csv')
df.drop('target')
df = subset(df, c(-target))
df = subset(df, -c(target))
df = df[-c(target)]
df = df[-c('target')]
df = subset(df, select = -c(target))
M = matrix(df)
View(M)
View(M)
M[0,]
M = df.as.matrix()
M = as.matrix(df)
View(M)
M.size
M.shape
M.shape()
M.size()
M.nrow
M.nrow()
M.dim
M.dim()
dim(M)
nrows, ncols = dim(M)
(nrows, ncols) = dim(M)
dims = dim(M)
dims[0]
dims[1]
M.T
M.transpose()
t(M)
diag(1, dims[1], dims[1])
diag(nrows = dims[1])
diag(nrow = dims[1])
diag(nrow = dims[1], ncol = dims[1])
ID = diag(nrow = dims[1], ncol = dims[1])
View(ID)
ID1 = diag(nrow = dims[1], ncol = dims[1])
One_Mat = matrix(1, nrow=dim[1], ncol=dim[1])
One_Mat = matrix(1, nrow=dims[1], ncol=dims[1])
View(One_Mat)
View(One_Mat)
sigma = t(M)%*%(ID1 - One_Mat/(dima[1]))%*%M
sigma = t(M)%*%(ID1 - One_Mat/(dims[1]))%*%M
View(sigma)
sqrt_matrix = diag(1/sqrt(diag(sigma)))
coeff_matrix = sqrt_matrix %*% sigma %*% sqrt_matrix
View(coeff_matrix)
View(coeff_matrix)
library('caTools')
df = read.csv('./heart.csv')
library('caTools')
df = read.csv('./heart.csv')
# all the columns are numerical in this dataset
# converting dataframe to matrix
M = as.matrix(df)
dims = dim(M)
# defining the identity matrix
ID = diag(nrow = dims[1], ncol = dims[1])
# defining the matrix of ones
One_Mat = matrix(1, nrow=dims[1], ncol=dims[1])
# calculating the variance covariance matrix
sigma = t(M)%*%(ID - One_Mat/(dims[1]))%*%M
# finding the squareroot matrix
sqrt_matrix = diag(1/sqrt(diag(sigma)))
# calculating the correlation coefficient matrix
coeff_matrix = sqrt_matrix %*% sigma %*% sqrt_matrix
print(coeff_matrix)
heatmap(coeff_matrix)
# Install the package if not already installed
if (!require(gplots)) install.packages('gplots')
# Load the package
library(gplots)
# Assuming `data` is your matrix
heatmap.2(coeff_matrix, cellnote = data, notecex = 1.0, notecol = "black", na.color = par("bg"), trace = "none")
# Assuming `data` is your matrix
heatmap.2(coeff_matrix, cellnote = coeff_matrix, notecex = 1.0, notecol = "black", na.color = par("bg"), trace = "none")
round(coeff_matrix, digits = 2)
# Assuming `data` is your matrix
heatmap.2(rounded_coeff, cellnote = rounded_coeff, notecex = 1.0, notecol = "black", na.color = par("bg"), trace = "none")
rounded_coeff = round(coeff_matrix, digits = 2)
# Assuming `data` is your matrix
heatmap.2(rounded_coeff, cellnote = rounded_coeff, notecex = 1.0, notecol = "black", na.color = par("bg"), trace = "none")
# Assuming `data` is your matrix
heatmap.2(rounded_coeff, cellnote = rounded_coeff, notecex = 1.0, notecol = "black", na.color = par("bg"), trace = "none", Rowv = NA, Colv = NA)
